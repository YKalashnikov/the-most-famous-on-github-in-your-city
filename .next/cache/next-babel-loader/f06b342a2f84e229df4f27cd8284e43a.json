{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport amber from '@material-ui/core/colors/amber';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(2)\n  },\n  success: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nconst AppSnackbarContent = props => {\n  const classes = useStyles();\n\n  const {\n    className,\n    message,\n    onClose,\n    variant\n  } = props,\n        other = _objectWithoutProperties(props, [\"className\", \"message\", \"onClose\", \"variant\"]);\n\n  return __jsx(SnackbarContent, _extends({\n    className: classNames(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: __jsx(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message\n    }, message) // eslint-disable-next-line react/jsx-props-no-spreading\n\n  }, other));\n};\n\nAppSnackbarContent.defaultProps = {\n  className: undefined,\n  message: '',\n  onClose: () => {}\n};\nexport default AppSnackbarContent;","map":null,"metadata":{},"sourceType":"module"}