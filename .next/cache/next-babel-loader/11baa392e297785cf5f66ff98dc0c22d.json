{"ast":null,"code":"var _jsxFileName = \"/Users/yuriikalashnikov/Desktop/popular-user-in-github/components/AppSnackbarContent.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport amber from '@material-ui/core/colors/amber';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(2)\n  },\n  success: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nconst AppSnackbarContent = props => {\n  const classes = useStyles();\n\n  const {\n    className,\n    message,\n    onClose,\n    variant\n  } = props,\n        other = _objectWithoutProperties(props, [\"className\", \"message\", \"onClose\", \"variant\"]);\n\n  return __jsx(SnackbarContent, _extends({\n    className: classNames(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: __jsx(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, message) // eslint-disable-next-line react/jsx-props-no-spreading\n\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nAppSnackbarContent.defaultProps = {\n  className: undefined,\n  message: '',\n  onClose: () => {}\n};\nAppSnackbarContent.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\nexport default AppSnackbarContent;","map":{"version":3,"sources":["/Users/yuriikalashnikov/Desktop/popular-user-in-github/components/AppSnackbarContent.js"],"names":["React","makeStyles","PropTypes","classNames","amber","SnackbarContent","useStyles","theme","close","padding","spacing","success","backgroundColor","palette","secondary","main","error","dark","info","primary","warning","icon","fontSize","iconVariant","opacity","marginRight","message","display","alignItems","AppSnackbarContent","props","classes","className","onClose","variant","other","defaultProps","undefined","propTypes","string","node","func","oneOf","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ,GAD8B;AAIrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAEL,KAAK,CAACM,OAAN,CAAcC,SAAd,CAAwBC;AADlC,GAJ4B;AAOrCC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,eAAe,EAAEL,KAAK,CAACM,OAAN,CAAcG,KAAd,CAAoBC;AADhC,GAP8B;AAUrCC,EAAAA,IAAI,EAAE;AACJN,IAAAA,eAAe,EAAEL,KAAK,CAACM,OAAN,CAAcM,OAAd,CAAsBF;AADnC,GAV+B;AAarCG,EAAAA,OAAO,EAAE;AACPR,IAAAA,eAAe,EAAER,KAAK,CAAC,GAAD;AADf,GAb4B;AAgBrCiB,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAhB+B;AAmBrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,GADE;AAEXC,IAAAA,WAAW,EAAElB,KAAK,CAACG,OAAN,CAAc,CAAd;AAFF,GAnBwB;AAuBrCgB,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,UAAU,EAAE;AAFL;AAvB4B,CAAL,CAAN,CAA5B;;AA6BA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClC,QAAMC,OAAO,GAAGzB,SAAS,EAAzB;;AACA,QAAM;AAAE0B,IAAAA,SAAF;AAAaN,IAAAA,OAAb;AAAsBO,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,MAAqDJ,KAA3D;AAAA,QAAiDK,KAAjD,4BAA2DL,KAA3D;;AAEA,SACE,MAAC,eAAD;AACE,IAAA,SAAS,EAAE3B,UAAU,CAAC4B,OAAO,CAACG,OAAD,CAAR,EAAmBF,SAAnB,CADvB;AAEE,wBAAiB,iBAFnB;AAGE,IAAA,OAAO,EACL;AAAM,MAAA,EAAE,EAAC,iBAAT;AAA2B,MAAA,SAAS,EAAED,OAAO,CAACL,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,CAJJ,CAQE;;AARF,KASMS,KATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAaD,CAjBD;;AAmBAN,kBAAkB,CAACO,YAAnB,GAAkC;AAChCJ,EAAAA,SAAS,EAAEK,SADqB;AAEhCX,EAAAA,OAAO,EAAE,EAFuB;AAGhCO,EAAAA,OAAO,EAAE,MAAM,CAAE;AAHe,CAAlC;AAMAJ,kBAAkB,CAACS,SAAnB,GAA+B;AAC7BN,EAAAA,SAAS,EAAE9B,SAAS,CAACqC,MADQ;AAE7Bb,EAAAA,OAAO,EAAExB,SAAS,CAACsC,IAFU;AAG7BP,EAAAA,OAAO,EAAE/B,SAAS,CAACuC,IAHU;AAI7BP,EAAAA,OAAO,EAAEhC,SAAS,CAACwC,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,MAAhC,CAAhB,EAAyDC;AAJrC,CAA/B;AAOA,eAAed,kBAAf","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport amber from '@material-ui/core/colors/amber'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(2),\n  },\n  success: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}))\n\nconst AppSnackbarContent = props => {\n  const classes = useStyles()\n  const { className, message, onClose, variant, ...other } = props\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          {message}\n        </span>\n      }\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...other}\n    />\n  )\n}\n\nAppSnackbarContent.defaultProps = {\n  className: undefined,\n  message: '',\n  onClose: () => {},\n}\n\nAppSnackbarContent.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n}\n\nexport default AppSnackbarContent\n"]},"metadata":{},"sourceType":"module"}